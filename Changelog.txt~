2020.12.10.

Ubuntu-ROS 기반 Cambridge Pixel SPx Scan image distribution program 개선사항

<spxppi_no_gui.cpp>
1. (Line 201, Finished)
img.step = 2048;
위 코드를 아래와 같이 수정
img.step = img.height * 4;
--> 2048로 고정하면, scan image의 크기(정사각형 이미지 가정)가 변할 때 올바른 publish가 이루어지지 않음.

2. ROS Launch file 관리 (To be modified)
변경이 가능한 argument들을 roslaunch의 rosparam 형태로 관리할 것. 
--> 실제로 야외에서 parameter를 바꾸기 위해 컴파일을 다시 하는 것이 아닌, launch 파일의 파라미터를 바꾸는 것으로 관리 요망.
--> 관리 필요 param: <spxppi_no_gui.cpp> Line 49-50의 MaxWinWidth, MaxWinHeight, Line 133의 source network address, port number

3. Publishing frequency의 조절 (To be modified)
현재 코드가 callback 형태로, 초당 영상 publish 횟수가 40회에 달함. 영상의 크기를 256x256으로 해도 초당 데이터 전송 bandwidth는 10MB에 달함. 이는 야외 실험 시, 실시간 송수신 대역폭을 다 점유하여 C-Stat 제어가 원활하지 않을 수 있음.
--> publishing rate를 10Hz로 조절. SPxServer에서 조절할 것인지, rosnode에서 조절할 지는 자유. 어떤 방식이든 구현할 것. 

4. ROS기반 scan image debugging script 작성 (scripts/radarView.py, Finished)
RVIZ 설치가 어려운 ASView-Bridge 노트북에서 작업을 수행할 때, 실시간 영상 수신 디버깅을 위한 별도의 뷰어 node가 필요함. Python기반 간단한 뷰어 스크립트 작성했음.
사용법: 
$ cd ~/catkin_ws/src/radar_interface/scripts
$ ./radarView.py

or

$ rosrun radar_interface_linux radarView.py
(catkin_make 및 본 package의 cmakelist 내용을 통해 script폴더 내의 파일도 run 할 수 있게 설정된 상태)

5. (Minor edits) 생성 package 대표이름을 변경
--> radar_interface_linux 로 변경

